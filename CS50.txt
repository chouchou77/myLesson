لحل مشكلة برمجية تحتاج مخطط يحتوي على سهم للمدخلات و علبة تحتوي العمليات (الخوارزميات) و سهم المخرجات.
الكمبيوتر لا يفهم سوى لغة الباينري 0و 1 و يسمى كل رقم "بيت". 0 تعني لا يوجد تيار،1 وجود تيار.
يتم تحويل كل 8 بيت الى بايت الذي يكون ارقام او حروف حسب الرمز المخصص لها و يعرف هذا النظام بASCII لكن هو غير كافي لتمثيل كل لغات العالم و كذلك الرموز و الايموجي لذلك لجأنا لأنظمة أخرى من بينها unicod.
كل بيت يختلف حسب صيغة الملف الموجود فيه  فيمكن ان يكون حروف و رموز و أرقام و ايموجي... في ملفات txt او بيكسلات الوان في الصور...
للبدأ بالبرمجة نحتاج خوارزمية تكون صحيحة و ذات كفائة اعلى و سريعة.
لتعيين اكبر وقت لتشغيل الخوارزمية(أسوأ حالة) نكتب O.
تمثل O كدالة رياضية :O(n). حيث n هو عدد مرات تشغيل الخوارزمية في أسوا حالة مثال ذلك في خوارزمية البحث الثنائي : O(log n).
لتعيين اصغر وقت لتشغيل الخوارزمية(أفضل حالة) نكتب Ω.
تمثل Ω كدالة رياضية :Ω(n). حيث n هو عدد مرات تشغيل الخوارزمية في أفضل حالة مثال ذلك في خوارزمية البحث الثنائي : Ω(1).
تكون الخوارزميات قواعد تسير عليها، مكتوبة بأي لغة بشرية تتكون من وظائف و قواعد شرطية و عبارات منطقية و حلقات تكرار.
scratch هي لغة برمجة رسومية تساعد الاطفال و المبتدئين في فهم اساسيات منطق البرمجة تقوم على لصق قطع التركيب التي هي عبارة عن وظائف و عبارات شرطية و حلقات... و تنفيذها عن طريق الشخصيات.
ide هو بيئة تطوير متكاملة اي البرنامج او المنصة التي تستطيع البرمجة عليها بلغة برمجة محددة مثلا: c,go,js...
terminal او النافذة الطرفية هي مايمكنك من تنفيذ الأوامر مثل تشغيل البرامج عكس الواجهة الرسومية gui التي تعتمد على الرسومات.
من الاوامر في ترمنال :
ls : عرض الملفات
cd : للدخول داخل مسار او مجلد
cp : نسخ
.. : الرجوع إلى المجلد او المسار السابق
rm : حذف ملف
mv : تغيير إسم ملف و تغيير موقع الملفات
mkdir : إنشاء مجلد
rmdir : حذف مجلد
لإنشاء اي برنامج انت بحاجة لإنشاء ملف ينتهي بامتداد اللغة المحددة مثلا: c,.py. 
للبرمجة بلغة c نحتاج لترجمتها للغة الآلة 0 و 1 و من اجل هذا نحتاج الى مترجم فنكتب الكود:
make fileName في هذه الخطوة يقوم المترجم بتجميع الكود في ملف يحتوي على لغة الآلة و يكتشف الأخطاء إن وجدت و هو امر مختصر فيمكننا بالأمر clang و هو المترجم بعدها o- ثم اسم ملف الإخراج(fileName) و بعدها الملف بلغة c و الأمر llibName- إذا كان لديك مكتبات مضمنة. فينتج ملف قابل للتنفيذ هو ملف الإخراج(fileName) و بعدها نكتب ./fileName و هنا يتم تنفيذ البرنامج.
هناك 4 خطوات لتنفيذ برنامج:
-المعالجة أي نسخ محتوى المكتبات داخل الملف من دوال و متغيرات...
-التجميع اي تحويل محتوى الملف إلى لغة التجميع (الأسمبلي) التي تكون أوامر موجهة للمعالج مباشرة.
-تحويل لغة الأسمبلي للغة الآلة 0,1.
-جمع كل الملف الرئيسي مع أي مكتبات لك التي حولت للغة الآلة في كتلة واحدة من 0,1.
الوظائف هي عبارات في البرمجة كبرامج مصغرة تعطيها معلمات و تقوم بفعل تعمل عند استدعائها عن طريق:
name_of_fun(arg).
وظيفة printf تقوم بالكتابة و يكون بعدها اقواس مفتوحة و في داخلها علامتا اقتباس و في آخرها فاصلة منقوطة مثلا:
 ;printf("hello, world") 
المكتبات في البرمجة كي رمز كتبه شخص او جهة اخرى بهدف مساعدتنا في تلخيص و تسهيل الترميز بالنسبة لنا.
المتغيرات هي شبه حاويات تحتوي على قيم مختلفة و لتعيين واحد عليك باحديد نوعه اولا.
وظيفة get_string دالة تطلب من المستخدم ادخال نص تكون بعدها اقواس و داخلها علامتا اقتباس و داخلها السؤال الموجه للمستخدم و يمكن حفظ البيانات داخل المتغير.
في دالة printf يمكن طبع متغير ذو قيمة نص ب: ;printf("hello, %s",var)
لاستدعاء مكتبة في لغة c:
include# <lybrary.h>k
\n تنزل سطرا جديدا
اول سطر في برامج لغة c يبدأ ب:
include <stdio.h> h#
و التي تستدعي هذه المكتبة التي تسمح لنا پاخذ المدخلات و المخرجات
من احل البدأ في c نحتاج لبناء الدالة الرئيسية:
int main(void){ the code }
يمكن إضافة تعليقات في c :
//comment 
هناك انواع من البيانات:
int : ارقام صحيحة أقل من 4مليار تستعمل 32بت لطباعتها نستعمل %i
long : أرقام صحيحة أكبر من 4مليار تستعمل 64بت لطباعتها نستعمل %li
float : أرقام عشرية لطباعتها نستعمل %f
c : حروف مفردة لطباعتها نستعمل %c
تقبل لغة c العمليات الرياضية:
الجمع +
الطرح -
الضرب *
القسمة /
باقي القسمة %
حتى نضيف 1 إلى متغير:
counter++ أو counter +=1
العبارات الشرطية تعني إذا كان ما داخل الأقواس صحيح ينفذ الشرط داخل الأقواس المتعرجة :
if(x==y){code}
و إذا لم يكن صحيح يجرب الذي بعده:
else if(x>y){code1}
و إذا لم يكن أي منها صحيح ينفذ الشرط الأخير:
else{code}
الحلقات تعني مادام الشرط داخل الأقواس صحيح إستمر بتنفيذ الكود داخل الأقواس المتعرجة:
while(condition){code}
و هناك 3 انواع:
int i = 0
while(i<50){code i++}
for(int i=0;i<50;i++){code}
;do{code}while(condition)
تسمح لغة  c بإنشاء دوال جديدة من خلال:
datatype name_of_fun(arg){code}
يجب أن تكون كل الدوال الجديدة فوق الدالة العامة لأنها لن تتعرف عليها إذا وصعناها أسفلها و الحل هو ان نضع التعريف فوق الدالة العامة و الدالة الثانية في الأسفل:
;datatype name_of_fun(arg)
الحجج arg هي المدخلات لدالة ما لاستعمالها نكتب نوع البيانات ثم اسم المتغير و نعطيه قيمة أثناء استدعاء الدالة.
return تسمح بأن تعطي للدالة قيمة. ذالك العدد او السلسلة.
نطاق المتغير هو المكان الذي يسمح للمتغير بالوجود فيه ما يعني اذا عرفنا متغيرا داخل الأقواس المتعرجة لحلقة أو عبارة شرطية فلا يسمح لنا باستعماله خارجها لأنه يصبح غير موجود.
القيود في c حيث تحتاج العملية الحسابية مجموعة بيتات كبيرة و انت لا تملكها فيحدث اختلال في دقة الحسابات.
array مصفوفة هي نوع من أنواع المتغيرات كسلسلة من القيم نعلن عنها:
int name[3] بين القوسين هو عدد القيم و لتعبئة القيم :
name[0] = 33; اي وضع العدد 33 في القيمة الأولى للمصفوفة و هكذا تكمل.
او يمكن تعريفها و تعبئة قيمها مباشرة:
int name[] = {2,4,6}
المصفوفة تأخذ بيتا زائدا لتعين إنتهاء المصفوفة نرمز له 0\.
يمكننا عرض الاحرف كأرقام التي تمثلها.
لا توحد في c نوع بيانات string لكن يمكن إنشاءه عن طريق مصفوفة من chars.
هناك دوال تتعامل مع السلاسل موجودة في مكتبة string.h مثل strlen التي تقيس طول السلسلة. و strcmp التي تقارن بين سلسلتين.
يمكن إنشاء نوع بيانات خاص بنا مثل int,char...من خلال كتابة هذا الكود فوق دالة main :
typedef struct{char name;int num;}nameOfDataty كيpe;
لاستدعاىها أو تهيئتها :
nameOfDatatype 
NewName[numOfDatatype]
و من اجل تعيينها:
NewName[0].name = value;
NewName[0].num = value;
و هكذا نكمل.
هناك نظام عد يسمى السداسي عشر (16) و يستعمل في الألوان غالبا و لتمييزه عن النظام العشري نكتب قبله 0x.
نظام RGB هو نظام لتعيين الألوان يستعمل 6 ارقام من النظام السداسي عشر ###### أول رقمان يمثلان درجة اللون الأحمر و الرقمان في الوسط درجة اللون الاخضر و آخر رقمان درجة اللون الازرق، عندما تكون كل الأعداد في قيمتها القصوى FFFFFF معناها اللون الأبيض و إذا كانت العكس في أدنى قيمة لها 000000 فمعناها اللون الأسود.
ذاكرة الجهاز تتكون إلى بيتات كل بيت لديه عنوان هذا العنوان يكون بالسداسي عشر، مثال: 0x123.
إذا قمنا بتعريف متغير و اردنا معرفة عنوانه في الذاكرة فإننا نكتب الححود التالي:
;printf("%p",&n)
حيث يمثل p و هو إختصار (pointer) او مؤشر و هو نوع بيانات للعناوين في الذاكرة و لتعريف متغير من هذا النوع: ;int *name = addr. اما الرمز & فهو رمز يطلب من الدالة جلب عنوان المتغير.
هناك رمز * الذي إذا كان في مكان & فإنه يطلب جلب القيمة من عنوان تقدمه له و إذا كان في تعريف متغير جديد فإنه يكون دليل على ان هذا المتغير مؤشر.
إذا قمت بتعريف مؤشر و لم تضع فيه قيمة مسبقا فلا يمكنك وضعها بعد ذلك مباشرة إلا إذا استعملت malloc لحجز مساحة ثم ضع القيمة في المؤشر.
طريقة إنشاء string هي :
"char *name = "HI
;printf("%s",name)
لا توجد في لغة c ايضا دوال مثل getstring او getint بل توحد دالة scanf:
;scanf("%i",&x)
علامة & معناها ان تضع المدخلات في عنوان المتغير x.
 لكن لا نحتاج وضع هذه العلامة عند إدخال سلسلة لأنها في الأساس عنوان.
دالة malloc تسمح بطلب عدد معين من البايتات من الحاسوب و تخزينها فارغة داخل متغير و هي موجودة داخل مكتبة stdlib.h و عند الإنتهاء منها تحتاج في الأخير لتحرير هذه البيتات بدالة free.
الذاكرة في اول الأمر تكون مجرد nul او 0 يعني فارغة لكن بمجرد وضع قيم داخلها كالمتغيرات او الدوال فحتى بعد حذفها تبقى هذه القيم موجودة لكن لا يمكن رؤيتها و لا تحذف إلا بعد ان نضع قيمة اخرى مكانها و تسمى القيم الباقية "قيم القمامة".
تنقيم الذاكرة العشوائية الى أقسام:
قسم لغة الآلة و هو الذي تذهب إليه 0و1 أثناء تشغيل برنامج اي بعد ترجمتها إلى لغة الآلة.
قسم المتغيرات العامة و تخزن فيه المتغيرات و الثوابت العامة التي تكون خارج الدوال.
قسم heap الذي يمنحك بايتات عند استدعاء malloc.
قسم stack و تخزن فيه المتغيرات المحلية و حجج الدوال مثل main و printf... و طريقة عمله:
حينتشغيل الدالة main تأخذ مكانا في الأسفل لمتغيراتها و تكمل صعودا حتى تاتي الدالة التي بعدها و تحجز مكانا لمتغيراتها صعودا و هكذا بقية الدوال و حين الإنتهاء من دالة تحذف تتابعا.
القسمان السابقين لا يوجد فاصل بينهما فيمكن ان يصدما إذا كانت المساحة منخفضة و إذا حدث هذا فتسما: stackoverflow.
اما buffer overflow هو عند تعيين مصفوفة أو استدعاء malloc ثم تتعداها.
تمكننا c ايضا من التعامل مع الملفات من خلال نوع بيانات يسمى FILE و يمكننا ذلك من خلال:
;FILE *x = fopen("file.txt","a")
حيث نستعمل مؤشرا، ثم نستعمل دالة fopen التي تأخذ قيمتين الاولى إسم الملف و الثانية التي تقبل قيمة r التي تعني قراءة الملف فقط و a و التي تعني إلحاق أي كتابة في آخر الملف و w التي تعني مسح مختويات الملف و الكتابة من جديد.
و هناك دالة fprintf التي تقبل قيمتين رئيسيتين الأولى إسم متغير الملف المفتوح و بعدها مذا تريد أن تضيف.مثال:
;fprintf(x,"ffff",555)
ثم الدالة الأخيرة fclose التي تقبل قيمة الملف المفتوح.
csv هي صيغة لملفات جدول البيانات الاي يمكن إستعمالها في حفظ البيانات.
من أشهر هياكل البيانات في c:
العقدة (node) و التي تحمل مكانا للقيمة و مكانا للمؤشر.
الشجرة حيث كل أب له أبنا يتفرعون منه، اي له مكانا للقيمة و مكانين للمؤشر أحدهما للأيمن و آخر للأيسر،و يستعمل فيها عودية دالة.
في لغة بايثون لا تحتاج للدالة الرئيسية و هيكل أساسي بل تبدأ البرمجة مباشرة.
في سطر الأوامر نشغل برنامج بايثون من خلال :
python file.py.
دالة الطباعة في بايثون تكون كالتالي:
;print("thing"+var)
تملك هذه الدالة حجتين الاولى لطباعة القيم و الثانية لما سيكون بعد طباعة القيمة:
print(vaue,end="/n")
تعيين المتغير في python:
;"var = "hfhdjdj
لإدخال القيم نستعمل:
var = input("sentex...")
لكنها تدخل كل القيم كانها سلاسل لذلك نحتاج للدالة int(var) من اجل تغييرها إلى عدد صحيح.
في بايثون لا يمكن زيادة قيمة متغير بطريقة     i++ بل بطريقة: 1 =+ i
لاستعمال الشروط في بايثون:
                        :if x < y
print("x less than y")
                    :elif x > y
print("x bigger than y")
                       :else
print("x equal y")
لاستعمال الحلقات في بايثون:
                 :while true
print("hello, world")
 او:
 for i in (1,2,3)
print("hello")
او:
for i in range(3##)
print("hello")
انواع البيانات في python:
bool,int,float,str
و هناك انواع اخرى من البيانات:
range:يعطيك سلسلة من الأعداد بدأ من 0.
list:تشبه المصفوفات في c لكن ليس لها حجم محدد.
tuple:تعيين قيمتين مفصولتين بفاصلة كإحداثيات الطول و العر x,y.
dict:قاموس و يسمح بإدخال كلمة و قيمة لها.
set:يتأكد من عدم وجود تكرارات في المجموعة.
هناك طريقتان لاستدعاء المكتبات في بايثون احدهما استدعاء دالة او متغير محدد من مكتبة:
from library import function
و الطريقة الثانية فتكون باستيراد المكتبة كاملة لكن المشكل انك حين استعمال ذلك ستحتاج حين استعمال متغير او دالة من المكتبة فستحتاج إلى تحديد من أي مكتبة أخذتها:
library.function(arg)
للإنشاء دوال في بايثون:
:def name(arg)
و لفتح ملف :
file = open(fileName,"r")
:for line in file
دالة sum تجمع قيم فيما بينهما.
دالة append تضيف قيكة إلى list.
يمكنك استيراد دالة argv التي تأخذ الحجج من سطر الاوامر:
from sys import argv
دالة strip() تحذف المساحات البيضاء من البداية و النهاية.
sql هي لفة لقواعد البيانات العلائقية التي تحمل عددا كبيرا من البيانات و لها خصائص كثيرة كالإدخال، التغيير، الحذف..
sqllite هي نيخة مصغرة نظيفة من sql تستعمل في تطبيقات الأندرويد و البرامج الصغيرة.
لإنشاء جدول مع أعمدة:
;CREATE TABLE name(column type,...)
حيث name هو اسم الجدول.
و column هو اسم العمود يكون بين مزدوجتين
و type هو نوع العمود TEXT,IMG,...
لاختبار او قراءة عمود :
;SELECT column FROM table
حيث column هو العمود الذي تريد قراءته.
و table هو الجدول.
كما يمكنك اختيار كل الأعمدة:
;SELECT * FROM table
يمكنك إضافة قيم إلى الجداول:
INSERT INTO table (column,...) VALUES(value,...)
كما يمكنك حذف قيم:
...DELETE FROM table
هناك دوال في sql مثل:
UPPER(column) التي تجعلها uppercase.
TRIM(column) تزيل المساحات البيضاء.
COUNT(column) تحسب عدد مرات ظهروها.
و هناك عبارات مساعدة مثل:
WHERE التي تشبه if أي الشرطية.
LIKE التي تقول مثل و يمكنك ايتعمال % للإشارة ان هناك 0 او اكثر من الحروف يمكن ان تكون هنا.
ORDER BY التي ترتب حسب ما ستكتبه لها بعدها.
LIMIT هو العدد الأقصى الذي يظهره..
مواقع الويب هي عبارة عن مجموعة من الملفات مربوطة في ما بينها مخزنة داخل سيرفر.
تعمل لغة html بمبدأ الوسوم حيث هناك وسم فتح <ex> و وسم إغلاق <ex/> و بينهما بقية الكود.
html لغة ترميز و هيكلة نبني بها صفحات الويب يبدأ ملف html :
<!DOCTYPE html> و هو يعلن الإصدار 5 من html.و هو لا يحتاج وسم إغلاق.
                 <html>
          <head>
هنا اكواد خاصة بالصفحة لا تظهر في الصفحة و هي ابناء لوسم head.
        <head/>
          <body>
هنا الأكواد التي تبني الصفحة و التي تظهر و هي ابناء لوسم body.
        <body/>
                 <html/>
اتعمل html بمبدا شجرة العائلة حيث تعتبر وسوم head و body ابناء لوسم html و ما ستكتبها داخل وسم head ابنا لوسم head.
من أبرز وسوم head:
<title>thing</title> هنا يكون عنوان صفحة الويب و يساعد محركات البحث في فهم محتوى صفحتك.
من أبرز وسوم body:
<p>thing</p> وسم الفقرة تكتب داخله نص ليتم إظهاره بسمك و طريقة معينة و ليتم الإنتقال لسطر جديد.
علامات العنواين <h1>head</h1> التي تكون فيها الخط أكبر و أعرض و يعني ان مادخلها عنوان.و هي انواع:
<h1>هي أكبرهم
<h2>
<h3>
<h5>
<h6>و هي أصغرهم.
لإنشاء قائمة غير مرتبة:
<ul>
<li></li>و هو عنصر في القائمة.
<ul/>
و إذا غيرنا ul إلى ol ستصبح القائمة مرتبة بأرقام.
لإنشاء جدول:
<table>
<tr>يعني صف
<td>thing</td>يعني عمود
<td>thing</td>
<tr/>
<tr>
<td>thing</td>
<td>thing</td>
<tr/>
<table/>
لإظهار صورة :
</"img alt="thing" src="image.jpg>
حيث alt هو ما يظهر في حال لم تظهر الصورة لأي سبب. 
و src هو إسم او رابط الصورة.
ولا تحتاج وسم إغلاق.
من اجل جعل إنشاء رابط داخل صفحة html :
<a href="exa.html">exa<a>
حيث href هو الرابط الذي ستذهب إليه عند الضغط على نص: exa
لغة css هي لغة نمطية تستعمل لتغيير الألوان و الأنماط و تعديل الصورو الحجوم.
يمكننا استعمال لغة css بإضافة وسم:
<style>
<style/>
و كتابة داخلها أكواد css.
او باستعمال ملف خارجي بامتداد css و كتابة كود داخل head في ملف html لربطهم ببعض:
</link rel="stylesheet" href="style.css>
و لا يحتاج وسم إغلاق.
للتعديل على عنصر من عناصر html باستعمال css نكتب اسم العنصر ثم نفتح قوصين متعرجين:
}a
code
{
لتغيير لون عنصر:
color: black
حيث يمكنك كتابة إسم اللون أو رمزه بالنظام السدسي عشر.
لوضع او إزالة خط على الكتابة:
text-decoration: none